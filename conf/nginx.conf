worker_processes auto;

events {
  worker_connections 1024;
}

http {
  log_format upstreamlog '$remote_addr -> $upstream_addr $request';

  lua_package_path '${prefix}?.lua;;';

  default_type text/html;

  gzip on;
  gzip_comp_level 3;

  proxy_cache_path cache/slice levels=1:2 keys_zone=SLICE:20m max_size=17g;
  proxy_ssl_server_name on;

  server {
    listen 443 ssl http2;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_certificate /etc/letsencrypt/live/pp-cdn.ddns.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/pp-cdn.ddns.net/privkey.pem;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; 
    ssl_session_cache shared:SSL:40m;
    ssl_session_timeout 4h;
    ssl_session_tickets on;

    proxy_cache SLICE;

    proxy_cache_lock_timeout 0s;
    proxy_cache_lock_age 200s;
    proxy_cache_use_stale updating;

    slice 2m;
    proxy_cache_key $host$uri$is_args$args$slice_range;
    proxy_set_header Range $slice_range;
    proxy_http_version 1.1;
    proxy_cache_valid 200 206 301 302 2h;


    location / {
      resolver 8.8.4.4;

      set $slice_cache '1';
      set $upstream '';
      access_by_lua "require('src/handler')()";

      proxy_no_cache $slice_cache;
      add_header X-Cache $upstream_cache_status;

      proxy_pass http://$upstream;
    }
  }

  server {
    listen  80;
    return 301  https://$host$request_uri;
  }
}

