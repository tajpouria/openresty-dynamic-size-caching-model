daemon  off;
error_log /dev/stdout; 

worker_processes auto;

events {
  worker_connections 1024;
}

http {
  default_type text/html;

  lua_package_path '${prefix}src/?.lua;;';

  #gzip on;
  #gzip_comp_level 3;

  proxy_cache_path cache/slice levels=1:2 keys_zone=SLICE:20m max_size=17g;
  proxy_ssl_server_name on;

  map $upstream_http_content_length $slice_cache {
    default                 0;
    "~^[1-2]?[0-9]{0,6}$"   0;
    "~^[1-2]?[0-9]{7,}$"    1;
  }

  server {
    #listen 443 ssl http2;
    listen 8080;

    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    #ssl_certificate /etc/letsencrypt/live/pp-cdn.ddns.net/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/pp-cdn.ddns.net/privkey.pem;
    #ssl_prefer_server_ciphers on;
    #ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; 
    #ssl_session_cache shared:SSL:40m;
    #ssl_session_timeout 4h;
    #ssl_session_tickets on;


    proxy_no_cache $slice_cache;
    proxy_cache_lock_timeout 0s;
    proxy_cache_lock_age 200s;
    proxy_cache_use_stale updating;

    slice 2m;
    proxy_cache_key $host$uri$is_args$args$slice_range;
    proxy_set_header Range $slice_range;
    proxy_http_version 1.1;

    location / {
			set $lua_cache 0;
			content_by_lua_block {
				if not ngx.var.slice_cache then
					ngx.var.lua_cache = 1
				end
			}

			add_header X-Cache $upstream_cache_status;
			add_header X-Slice-Cache $slice_cache;
			add_header X-LUA-Cache $lua_cache;

      proxy_pass http://dl2.perserver.site/;
    }
  }

  #server {
  #  listen  80;
  #  return 301  https://$host$request_uri;
  #}
}

